diff --git a/CMakeLists.txt b/CMakeLists.txt
index 9ce8b3b..8644d10 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -43,14 +43,12 @@ endif(rocblas_FOUND)
 # variables since we will pass them as cmake params appropriately, and 
 # all find_packages relevant to this build will be in ROCM path hence appending it to CMAKE_PREFIX_PATH 
 set(ROCM_PATH "/opt/rocm" CACHE PATH "ROCM install path")
-set(CMAKE_INSTALL_PREFIX "/opt/rocm" CACHE PATH "CMAKE installation directory")
-set(CMAKE_PACKAGING_INSTALL_PREFIX "/opt/rocm" CACHE PATH "Prefix used in built packages")
+set (CMAKE_PACKAGING_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}" )
 list(APPEND CMAKE_PREFIX_PATH "${ROCM_PATH}")
-set(ROCR_INC_DIR "${ROCM_PATH}/include" CACHE PATH "Contains header files exported by ROC Runtime" FORCE)
-set(ROCR_LIB_DIR "${ROCM_PATH}/lib" CACHE PATH "Contains library files exported by ROC Runtime" FORCE)
-set(HIP_INC_DIR "${ROCM_PATH}/hip" )
-set(HIP_INC_DIR "${ROCM_PATH}/hip" CACHE PATH "Contains header files exported by ROC Runtime" FORCE)
-set(ROCT_INC_DIR "${ROCM_PATH}/include" CACHE PATH "Contains header files exported by ROC Trunk" FORCE)
+set(ROCR_INC_DIR "${ROCM_PATH}/include" CACHE PATH "Contains header files exported by ROC Runtime")
+set(ROCR_LIB_DIR "${ROCM_PATH}/lib" CACHE PATH "Contains library files exported by ROC Runtime")
+set(HIP_INC_DIR "${ROCM_PATH}/hip" CACHE PATH "Contains header files exported by ROC Runtime")
+set(ROCT_INC_DIR "${ROCM_PATH}/include" CACHE PATH "Contains header files exported by ROC Trunk")
 
 
 #
@@ -162,8 +160,6 @@ set(RVS_ROCBLAS "0" CACHE STRING "1 = use local rocBLAS")
 set(RVS_ROCMSMI "0" CACHE STRING "1 = use local rocm_smi_lib")
 
 set(RVS_LIB_DIR "${CMAKE_BINARY_DIR}/rvslib" CACHE PATH "Contains RVS library")
-set(YAML_INC_DIR "${CMAKE_BINARY_DIR}/yaml-src/include" CACHE PATH "Contains header files exported by yaml-cpp")
-set(YAML_LIB_DIR "${CMAKE_BINARY_DIR}/yaml-build" CACHE PATH "Contains library files exported by yaml-cpp")
 
 if (${RVS_OS_TYPE} STREQUAL "centos")
   set(ROCT_LIB_DIR "${ROCM_PATH}/lib64" CACHE PATH "Contains library files exported by ROC Trunk")
@@ -207,86 +203,6 @@ if (NOT DEFINED CPACK_GENERATOR )
 endif()
 message (STATUS "CPACK_GENERATOR ${CPACK_GENERATOR}" )
 
-
-################################################################################
-# Download and unpack yaml-cpp at configure time
-configure_file(CMakeYamlDownload.cmake yaml-download/CMakeLists.txt)
-execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
-  RESULT_VARIABLE result
-  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/yaml-download )
-if(result)
-  message(FATAL_ERROR "CMake step for yaml-download failed: ${result}")
-endif()
-execute_process(COMMAND ${CMAKE_COMMAND} --build .
-  RESULT_VARIABLE result
-  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/yaml-download )
-if(result)
-  message(FATAL_ERROR "Build step for yaml-download failed: ${result}")
-endif()
-execute_process(COMMAND ${CMAKE_COMMAND} ${CMAKE_BINARY_DIR}/yaml-src -B${CMAKE_BINARY_DIR}/yaml-build
-  RESULT_VARIABLE result
-  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/yaml-src )
-if(result)
-  message(FATAL_ERROR "Config step for yaml-src failed: ${result}")
-endif()
-
-add_custom_target(rvs_yaml_target
-  DEPENDS ${CMAKE_BINARY_DIR}/yaml-build/libyaml-cpp.a
-)
-
-add_custom_command(OUTPUT ${CMAKE_BINARY_DIR}/yaml-build/libyaml-cpp.a
-  COMMAND make -C ${CMAKE_BINARY_DIR}/yaml-build
-  WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/yaml-src
-  COMMENT "Generating yaml-cpp targets"
-  VERBATIM)
-
-################################################################################
-## GOOGLE TEST
-if(RVS_BUILD_TESTS)
-  # Download and unpack googletest at configure time
-  configure_file(CMakeGtestDownload.cmake googletest-download/CMakeLists.txt)
-  execute_process(COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}" .
-    RESULT_VARIABLE result
-    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-download )
-  if(result)
-    message(FATAL_ERROR "CMake step for googletest failed: ${result}")
-  endif()
-  execute_process(COMMAND ${CMAKE_COMMAND} --build .
-    RESULT_VARIABLE result
-    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-download )
-  if(result)
-    message(FATAL_ERROR "Build step for googletest failed: ${result}")
-  endif()
-  execute_process(COMMAND ${CMAKE_COMMAND} ${CMAKE_BINARY_DIR}/googletest-src -B${CMAKE_BINARY_DIR}/googletest-build
-    RESULT_VARIABLE result
-    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-src )
-  if(result)
-    message(FATAL_ERROR "Config step for googletest-src failed: ${result}")
-  endif()
-
-  add_custom_target(rvs_gtest_target
-    DEPENDS ${CMAKE_BINARY_DIR}/googletest-build/lib/libgtest_main.a
-  )
-
-  add_custom_command(OUTPUT ${CMAKE_BINARY_DIR}/googletest-build/lib/libgtest_main.a
-    COMMAND make -C ${CMAKE_BINARY_DIR}/googletest-build
-    WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/googletest-src
-    COMMENT "Generating googletest targets"
-    VERBATIM)
-
-  ## Set default unit test framework include path
-  if (NOT DEFINED UT_INC)
-      set (UT_INC "${CMAKE_BINARY_DIR}/googletest-src/googletest/include")
-      message ("UT_INC ${UT_INC}")
-  endif ()
-
-  ## Set default unit test framework include path
-  if (NOT DEFINED UT_LIB)
-      set (UT_LIB "${CMAKE_BINARY_DIR}/googletest-build/lib")
-      message ("UT_LIB ${UT_LIB}")
-  endif()
-
-endif()
 ################################################################################
 ## rocBLAS
 
@@ -410,16 +326,16 @@ if (RVS_ROCBLAS EQUAL 1)
   set(ROCBLAS_INC_DIR "${CMAKE_BINARY_DIR}/rvs_rblas-src/build/release/rocblas-install")
   set(ROCBLAS_LIB_DIR "${CMAKE_BINARY_DIR}/rvs_rblas-src/build/release/rocblas-install/lib/")
 else()
-  set(ROCBLAS_INC_DIR "${ROCM_PATH}/include")
-  set(ROCBLAS_LIB_DIR "${ROCM_PATH}/lib")
+  set(ROCBLAS_INC_DIR "${ROCBLAS_DIR}/include")
+  set(ROCBLAS_LIB_DIR "${ROCBLAS_DIR}/lib")
 endif()
 
 if (RVS_ROCMSMI EQUAL 1)
   set(ROCM_SMI_INC_DIR "${CMAKE_BINARY_DIR}/rvs_smi-src/include")
   set(ROCM_SMI_LIB_DIR "${CMAKE_BINARY_DIR}/rvs_smi-build")
 else()
-  set(ROCM_SMI_INC_DIR "${ROCM_PATH}/rocm_smi/include")
-  set(ROCM_SMI_LIB_DIR "${ROCM_PATH}/rocm_smi/lib")
+  set(ROCM_SMI_INC_DIR "${ROCM_SMI_DIR}/include")
+  set(ROCM_SMI_LIB_DIR "${ROCM_SMI_DIR}/lib")
 endif()
 set(ROCM_SMI_LIB "rocm_smi64" CACHE STRING "rocm_smi library name")
 
@@ -454,7 +370,7 @@ if (RVS_BUILD_TESTS)
   add_subdirectory(testif.so)
 endif()
 
-add_dependencies(rvshelper rvs_bin_folder rvs_doc rvs_yaml_target)
+add_dependencies(rvshelper rvs_bin_folder rvs_doc)
 
 
 add_dependencies(pesm rvslib rvslibrt)
@@ -489,7 +405,7 @@ if (RVS_BUILD_TESTS)
   WORKING_DIRECTORY ${CMAKE_BINARY_DIR}
   COMMENT "Create the bintest directory"
   VERBATIM)
-  add_dependencies(rvshelper rvs_bintest_folder rvs_gtest_target)
+  add_dependencies(rvshelper rvs_bintest_folder)
 endif()
 
 add_custom_target(rvs_doc ALL
